INFO main org.learning.design.pattern.proxy.statics.UserProxy - doing somthing before real thing which want to do
INFO main org.learning.design.pattern.proxy.statics.SummerUserImpl - Hello,Proxy
INFO main org.learning.design.pattern.proxy.statics.UserProxy - doing somthing after real thing which want to do
INFO main org.learning.design.pattern.proxy.dynamic.ProxyHandler - doing somthing before real thing which want to do, param=Dynamic Proxy
INFO main org.learning.design.pattern.proxy.statics.SummerUserImpl - Hello,Dynamic Proxy
INFO main org.learning.design.pattern.proxy.dynamic.ProxyHandler - doing somthing before real thing which want to do, param=Dynamic Proxy
INFO main org.learning.design.pattern.proxy.statics.SummerUserImpl - Hello,Dynamic Proxy
INFO main org.learning.design.pattern.proxy.dynamic.cglib.CglibDynamicProxy - doing somthing before real thing which want to do
INFO main org.learning.design.pattern.proxy.statics.SummerUserImpl - Hello,Cglib Dynamic Proxy
INFO main org.learning.design.pattern.proxy.dynamic.cglib.CglibDynamicProxy - doing somthing after real thing which want to do
INFO main org.learning.design.pattern.proxy.dynamic.jdk.ProxyHandler - doing somthing before real thing which want to do, param=Dynamic Proxy
INFO main org.learning.design.pattern.proxy.statics.SummerUserImpl - Hello,Dynamic Proxy
INFO main org.learning.design.pattern.proxy.dynamic.jdk.ProxyHandler - doing somthing after real thing which want to do
INFO main org.learning.design.pattern.prototype.PrototypeTest - original object:changed object1
INFO main org.learning.design.pattern.prototype.PrototypeTest - cloned object:original object
INFO main org.learning.design.pattern.prototype.NewPrototypeTest - original object id:test1
INFO main org.learning.design.pattern.prototype.NewPrototypeTest - original object name:original object
INFO main org.learning.design.pattern.prototype.NewPrototypeTest - cloned object id:testCopy
INFO main org.learning.design.pattern.prototype.NewPrototypeTest - cloned object name:changed object
INFO main org.learning.design.pattern.prototype.PrototypeTest - original object:changed object1
INFO main org.learning.design.pattern.prototype.PrototypeTest - cloned object:original object
ERROR main org.learning.design.pattern.prototype.serialize.NewSerializePrototype - org.apache.log4j.Logger
java.io.NotSerializableException: org.apache.log4j.Logger
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.learning.design.pattern.prototype.serialize.NewSerializePrototype.deepClone(NewSerializePrototype.java:38)
	at org.learning.design.pattern.prototype.SerializePrototypeTest.testNewPrototype(SerializePrototypeTest.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
ERROR main org.learning.design.pattern.prototype.serialize.NewSerializePrototype - org.apache.log4j.Logger
java.io.NotSerializableException: org.apache.log4j.Logger
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.learning.design.pattern.prototype.serialize.NewSerializePrototype.deepClone(NewSerializePrototype.java:38)
	at org.learning.design.pattern.prototype.SerializePrototypeTest.testNewPrototype(SerializePrototypeTest.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
ERROR main org.learning.design.pattern.prototype.serialize.NewSerializePrototype - org.apache.log4j.Logger
java.io.NotSerializableException: org.apache.log4j.Logger
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1184)
	at java.io.ObjectOutputStream.defaultWriteFields(ObjectOutputStream.java:1548)
	at java.io.ObjectOutputStream.writeSerialData(ObjectOutputStream.java:1509)
	at java.io.ObjectOutputStream.writeOrdinaryObject(ObjectOutputStream.java:1432)
	at java.io.ObjectOutputStream.writeObject0(ObjectOutputStream.java:1178)
	at java.io.ObjectOutputStream.writeObject(ObjectOutputStream.java:348)
	at org.learning.design.pattern.prototype.serialize.NewSerializePrototype.deepClone(NewSerializePrototype.java:38)
	at org.learning.design.pattern.prototype.SerializePrototypeTest.testNewPrototype(SerializePrototypeTest.java:18)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)
INFO main org.learning.design.pattern.prototype.SerializePrototypeTest - original name:test1
INFO main org.learning.design.pattern.prototype.SerializePrototypeTest - cloned name:test2
INFO main org.learning.design.pattern.prototype.LightCopyPrototypeTest - original object:changed object1
INFO main org.learning.design.pattern.prototype.LightCopyPrototypeTest - cloned object:original object
INFO main org.learning.design.pattern.prototype.LightCopyPrototypeTest - original object:original object
INFO main org.learning.design.pattern.prototype.LightCopyPrototypeTest - cloned object:original object
INFO main org.learning.design.pattern.prototype.LightCopyPrototypeTest - original object:original object
INFO main org.learning.design.pattern.prototype.LightCopyPrototypeTest - cloned object:changed object
INFO main org.learning.design.pattern.decoration.Saler - Analysis market situation.
INFO main org.learning.design.pattern.decoration.Programer - Programer work hard to code.
INFO main org.learning.design.pattern.decoration.BusinessAnalyst - Analysis business request from Salers.
INFO main org.learning.design.pattern.decoration.Programer - Programer work hard to code.
INFO main org.learning.design.pattern.decoration.BusinessAnalyst - Analysis business request from Salers.
INFO main org.learning.design.pattern.decoration.Programer - Programer work hard to code.
INFO main org.learning.design.pattern.decoration.Saler - Analysis market situation.
INFO main org.learning.design.pattern.decoration.Programer - Programer work hard to code.
INFO main org.learning.design.pattern.decoration.BusinessAnalyst - Analysis business request from Salers.
INFO main org.learning.design.pattern.decoration.Programer - Programer work hard to code.
INFO main org.learning.design.pattern.decoration.Programer - Programer work hard to code.
INFO main org.learning.design.pattern.decoration.Tester - Test and submit project.
INFO main org.learning.design.pattern.decoration.Saler - Analysis market situation.
INFO main org.learning.design.pattern.decoration.Programer - Programer work hard to code.
INFO main org.learning.design.pattern.decoration.BusinessAnalyst - Analysis business request from Salers.
INFO main org.learning.design.pattern.decoration.Programer - Programer work hard to code.
INFO main org.learning.design.pattern.decoration.Programer - Programer work hard to code.
INFO main org.learning.design.pattern.decoration.Tester - Test and submit project.
INFO main org.learning.design.pattern.decoration.Saler - Analysis market situation.
INFO main org.learning.design.pattern.decoration.BusinessAnalyst - Analysis business request from Salers.
INFO main org.learning.design.pattern.decoration.Programer - Programer work hard to code.
INFO main org.learning.design.pattern.decoration.Tester - Test and submit project.
INFO main com.learning.design.pattern.composite.CompositeTest - root
  firstNode
    firstLeaf
  secondNode
    secondLeaf
  thirdNode
    thirdLeaf
INFO main com.learning.design.pattern.adapter.ChineseAdapter - Running in Chinese environment.
INFO main com.learning.design.pattern.adapter.JapanTV - Running Japanese Microwave.
INFO main com.learning.design.pattern.adapter.ChineseAdapter - Running in Chinese environment.
INFO main com.learning.design.pattern.adapter.JapanMicrowave - Running Japanese TV.
INFO main com.learning.design.pattern.adapter.ChineseAdapter - Running in Chinese environment.
INFO main com.learning.design.pattern.adapter.JapanTV - Running Japanese Microwave.
INFO main com.learning.design.pattern.adapter.ChineseAdapter - Running in Chinese environment.
INFO main com.learning.design.pattern.adapter.JapanMicrowave - Running Japanese TV.
INFO main org.learning.design.pattern.observer.SummerObserver - change from null to cloudy in org.learning.design.pattern.observer.SummerObserver
INFO main org.learning.design.pattern.observer.WinnerObserver - change from null to cloudy in org.learning.design.pattern.observer.WinnerObserver
INFO main org.learning.design.pattern.observer.SummerObserver - change from cloudy to rainy in org.learning.design.pattern.observer.SummerObserver
INFO main org.learning.design.pattern.observer.WinnerObserver - change from cloudy to rainy in org.learning.design.pattern.observer.WinnerObserver
INFO main org.learning.design.pattern.command.PowerReceiver - execute power command
INFO main org.learning.design.pattern.command.UpVoiceReceiver - execute down voice command
INFO main org.learning.design.pattern.command.DownVoiceReceiver - execute up voice command
INFO main org.learning.design.pattern.state.NormalVoteState - Normal: summer vote Chairman Mao
INFO main org.learning.design.pattern.state.RepeatVoteState - Spiteful: summer vote Chairman Mao
INFO main org.learning.design.pattern.state.RepeatVoteState - Spiteful: summer vote Chairman Mao
INFO main org.learning.design.pattern.state.RepeatVoteState - Spiteful: summer vote Chairman Mao
INFO main org.learning.design.pattern.state.RepeatVoteState - Spiteful: summer vote Chairman Mao
INFO main org.learning.design.pattern.state.SpitefulVoteState - Repeat: summer vote Chairman Mao, put you in black list.
INFO main org.learning.design.pattern.state.SpitefulVoteState - Repeat: summer vote Chairman Mao, put you in black list.
INFO main org.learning.design.pattern.state.SpitefulVoteState - Repeat: summer vote Chairman Mao, put you in black list.
INFO main org.learning.design.pattern.state.SpitefulVoteState - Repeat: summer vote Chairman Mao, put you in black list.
INFO main org.learning.design.pattern.state.SpitefulVoteState - Repeat: summer vote Chairman Mao, put you in black list.
INFO main org.learning.design.pattern.state.NormalVoteState - Normal: summer vote Chairman Mao
INFO main org.learning.design.pattern.state.RepeatVoteState - Repeat: summer vote Chairman Mao
INFO main org.learning.design.pattern.state.RepeatVoteState - Repeat: summer vote Chairman Mao
INFO main org.learning.design.pattern.state.RepeatVoteState - Repeat: summer vote Chairman Mao
INFO main org.learning.design.pattern.state.RepeatVoteState - Repeat: summer vote Chairman Mao
INFO main org.learning.design.pattern.state.SpitefulVoteState - Spiteful: summer vote Chairman Mao, put you in black list.
INFO main org.learning.design.pattern.state.SpitefulVoteState - Spiteful: summer vote Chairman Mao, put you in black list.
INFO main org.learning.design.pattern.state.SpitefulVoteState - Spiteful: summer vote Chairman Mao, put you in black list.
INFO main org.learning.design.pattern.state.SpitefulVoteState - Spiteful: summer vote Chairman Mao, put you in black list.
INFO main org.learning.design.pattern.state.SpitefulVoteState - Spiteful: summer vote Chairman Mao, put you in black list.
INFO main com.learning.design.pattern.template.AbstractShopping - View from Computer
INFO main com.learning.design.pattern.template.AbstractShopping - Put Cameron in Shopping Cart
INFO main com.learning.design.pattern.template.AbstractShopping - Pay bill for goods!
INFO main com.learning.design.pattern.template.AbstractShopping - Sent package by JD
INFO main com.learning.design.pattern.template.AbstractShopping - View from phone
INFO main com.learning.design.pattern.template.AbstractShopping - Put food in Shopping Cart
INFO main com.learning.design.pattern.template.AbstractShopping - Pay bill for goods!
INFO main com.learning.design.pattern.template.AbstractShopping - Sent package by SF
INFO main com.learning.design.pattern.strategy.MemberPrice - Gold members enjoy a 10% discount.
INFO main com.learning.design.pattern.strategy.StrategyTest - final price is 90.0
INFO main org.learning.design.pattern.bridge.Box - Generate circular box
INFO main org.learning.design.pattern.bridge.Goods - Stand for technology.
INFO main org.learning.design.pattern.bridge.Box - Generate circular box
INFO main org.learning.design.pattern.bridge.Goods - Stand for friendship.
